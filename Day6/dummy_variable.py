# -*- coding: utf-8 -*-
"""Dummy_variable.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pH5ZKQJYR-U2O__ZP8fgPmOf2twIdfEi
"""

import pandas as pd
import numpy as np

df=pd.read_csv('/content/homeprices.csv')

df.sample(5)

dummies=df.copy()
onehotencoder_method=df.copy()

"""## Here we can see the town column is a categorical column so we need to convert it into numerical column which can be done using two techiques one is by using pandas get_dummies method which will create Dummy Variable and other is OneHotEncoding()"""

dummies_town=pd.get_dummies(df.town)
dummies_town.head()

dummies=dummies.drop('town',axis=1)

dummies=pd.concat([dummies,dummies_town],axis=1)
dummies.head(2)

dummies.info()

X=dummies.drop('price',axis=1)
y=dummies.price

!pip install scikit-learn

from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split

model=LinearRegression()
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3)

model.fit(X,y)

def user_data():
  price=int(input('Price ?'))
  monroe_township=int(input('Monroe_township (Yes-1 \ No-0) ?'))
  robinsville=int(input('Robinsville (Yes-1 \ No-0) ?'))
  west_windsor=int(input('West Windsor (Yes-1 \ No-0) ?'))
  user_data=[[price,monroe_township,robinsville,west_windsor]]
  return user_data

model.predict(user_data())

y_pred=model.predict(X_test)

from sklearn.metrics import r2_score


r2_score(y_test,y_pred)