# -*- coding: utf-8 -*-
"""Normalization

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lTiy8FRgE4vgYA8CM82t-1aoPvtBfine
"""

import pandas as pd
import numpy as np

df=pd.read_csv('/content/wine_data.csv',names=['ClassLabel','Alcohol','Malic Acid'],header=None,usecols=[0,1,2])

df.head()

df.sample(6)

import seaborn as sns
import matplotlib.pyplot as plt

sns.kdeplot(df['Alcohol'])

sns.kdeplot(df['Malic Acid'])

color_palatte=['red','black','blue']

sns.scatterplot(x=df['Alcohol'],y=df['Malic Acid'],hue=df['ClassLabel'],palette=color_palatte)

from sklearn.model_selection import train_test_split

# Assuming 'ClassLabel' is the target column
X_train, X_test, y_train, y_test = train_test_split(df.iloc[:,1:3],
                                                    df['ClassLabel'],
                                                     test_size=0.33
)

X_train

from sklearn.preprocessing import MinMaxScaler

Mm=MinMaxScaler()

Mm.fit(X_train)

X_train_scaled=Mm.transform(X_train)
X_test_scaled=Mm.transform(X_test)

X_train,X_train_scaled

X_train_scaled=pd.DataFrame(X_train_scaled,columns=X_train.columns)
X_test_scaled=pd.DataFrame(X_test_scaled,columns=X_test.columns)

X_train,X_train_scaled

np.round(X_train.describe())

np.round(X_train_scaled.describe())

figure ,(ax1,ax2)=plt.subplots(ncols=2,figsize=(12,5))

ax1.set_title("Before Scaling")
ax1.set_xlabel("Malic Acid")
ax1.set_ylabel("Alcohol")
sns.kdeplot(X_train['Malic Acid'],ax=ax1)
sns.kdeplot(X_train['Alcohol'],ax=ax1)


ax2.set_title("After Scaling")
ax2.set_xlabel("Malic Acid")
ax2.set_ylabel("Alcohol")
sns.kdeplot(X_train_scaled['Malic Acid'],ax=ax2)
sns.kdeplot(X_train_scaled['Alcohol'],ax=ax2)

figure ,(ax1,ax2)=plt.subplots(ncols=2,figsize=(12,5))

ax1.set_title("Before Scaling")
sns.kdeplot(X_train['Malic Acid'],ax=ax1)

ax2.set_title("After Scaling")
sns.kdeplot(X_train_scaled['Malic Acid'],ax=ax2)

figure ,(ax1,ax2)=plt.subplots(ncols=2,figsize=(12,5))

ax1.set_title("Before Scaling")
sns.kdeplot(X_train['Alcohol'],ax=ax1)

ax2.set_title("After Scaling")
sns.kdeplot(X_train_scaled['Alcohol'],ax=ax2)
plt.show()

"""# *Point to be noted here is that after sacling the values will lie in range of [0,1] but in the above graph as it is a probability distribution function it is comin more than 0,1 but in real it is not* #"""

